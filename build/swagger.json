{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"identification": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password",
					"role",
					"firstName",
					"lastName",
					"identification",
					"email",
					"phoneNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetParamsBody": {
				"properties": {
					"filter": {},
					"projection": {}
				},
				"required": [
					"filter",
					"projection"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Service": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "restapi-noexcuses-gymmanagement",
		"version": "1.0.0",
		"description": "RestAPI for the management of an exercise center, with reservation logic, schedules and administrative actors.",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/user/login": {
			"get": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Login",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "password",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/signup": {
			"post": {
				"operationId": "Signup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Login",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			}
		},
		"/user/refreshToken": {
			"get": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Refresh token",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "refreshToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/logout": {
			"get": {
				"operationId": "Logout",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Logout",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "jwtToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "refreshToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/sessions/get": {
			"post": {
				"operationId": "GetSessions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Get objects from the collection using the given params",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "filter & projection",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetParamsBody"
							}
						}
					}
				}
			}
		},
		"/api/services/get": {
			"post": {
				"operationId": "GetServices",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Get objects from the collection using the given params",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "filter & projection",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GetParamsBody"
							}
						}
					}
				}
			}
		},
		"/api/services/create": {
			"post": {
				"operationId": "CreateService",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Create a new service",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "new object to add to the collection",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Service"
							}
						}
					}
				}
			}
		},
		"/api/services/update": {
			"post": {
				"operationId": "UpdateService",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Update an existing service",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "with the oldService and newService objects",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"newService": {
										"$ref": "#/components/schemas/Service"
									},
									"oldService": {
										"$ref": "#/components/schemas/Service"
									}
								},
								"required": [
									"newService",
									"oldService"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/services/delete": {
			"delete": {
				"operationId": "DeleteService",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Delete a service using the object id",
				"security": [],
				"parameters": [
					{
						"description": "the object id of the service to find and delete",
						"in": "query",
						"name": "serviceId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}